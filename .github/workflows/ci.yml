name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: times-excel-reader

      - name: Install tool and dependencies
        working-directory: times-excel-reader
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]

      - name: Check code formatting
        working-directory: times-excel-reader
        run: |
          source .venv/bin/activate
          pre-commit install
          pre-commit run --all-files

      # ---------- Prepare ETSAP Demo models

      - uses: actions/checkout@v3
        with:
          repository: etsap-TIMES/TIMES_model
          path: TIMES_model

      - uses: actions/checkout@v3
        with:
          repository: olejandro/demos-dd
          path: times-excel-reader/benchmarks/dd

      - uses: actions/checkout@v3
        with:
          repository: olejandro/demos-xlsx
          path: times-excel-reader/benchmarks/xlsx
          token: ${{ secrets.GH_PAT_DEMOS_XLSX }}

      # ---------- Prepare TIMES Ireland Model

      # We add this model as the directory `ireland` under `benchmarks/{xlsx,dd}/`
      # so that the run_benchmarks.py script runs this model too
      - uses: actions/checkout@v3
        with:
          repository: samwebster/times-ireland-model
          path: times-excel-reader/benchmarks/xlsx/Ireland

      - uses: actions/checkout@v3
        with:
          repository: olejandro/times-ireland-model_gams
          path: times-excel-reader/benchmarks/dd/Ireland

      # ---------- Install GAMS

      - name: Install GAMS
        run: |
          curl https://d37drm4t2jghv5.cloudfront.net/distributions/44.1.0/linux/linux_x64_64_sfx.exe -o linux_x64_64_sfx.exe
          chmod +x linux_x64_64_sfx.exe
          mkdir GAMS
          pushd  GAMS
          ../linux_x64_64_sfx.exe > /dev/null && echo Successfully installed GAMS
          export PATH=$PATH:$(pwd)/gams44.1_linux_x64_64_sfx
          popd
          echo Creating license file at $HOME/.local/share/GAMS
          mkdir -p $HOME/.local/share/GAMS
          echo "$GAMS_LICENSE" > $HOME/.local/share/GAMS/gamslice.txt
          ls -l $HOME/.local/share/GAMS/
        env:
          GAMS_LICENSE: ${{ secrets.GAMS_LICENSE }}

      # ---------- Run tool, check for regressions

      - name: Run tool on all benchmarks
        working-directory: times-excel-reader
        # Use tee to also save the output to out.txt so that the summary table can be
        # printed again in the next step.
        # Save the return code to retcode.txt so that the next step can fail the action
        # if run_benchmarks.py failed.
        run: |
          source .venv/bin/activate
          export PATH=$PATH:$GITHUB_WORKSPACE/GAMS/gams44.1_linux_x64_64_sfx
          (python utils/run_benchmarks.py benchmarks.yml \
              --dd --times_dir $GITHUB_WORKSPACE/TIMES_model \
              --verbose \
              | tee out.txt; \
            echo ${PIPESTATUS[0]} > retcode.txt)

      - name: Print summary
        working-directory: times-excel-reader
        run: |
          sed -n '/Benchmark *Time.*Accuracy/h;//!H;$!d;x;//p' out.txt
          exit $(cat retcode.txt)
